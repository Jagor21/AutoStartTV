plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "com.google.protobuf" version "0.8.12"
    id("dagger.hilt.android.plugin")
    id 'kotlin-kapt'
    id 'com.google.firebase.crashlytics'
    id 'org.jetbrains.kotlin.android'
}

android {
    signingConfigs {
        release {
        }
    }
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.vlifte.autostarttv"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

    }
    signingConfigs {
        release {
        storeFile file('/Users/jagorkushnir/StudioProjects/AutoStartTV/keystore')
            storePassword '123456'
            keyPassword '123456'
            keyAlias 'key0'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable true
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    def datastore = "1.0.0-beta01"
    def protobuf = "3.11.0"
    def preference = "1.1.1"

    def hilt = "2.46.1"
    def hiltViewModel = "1.0.0-alpha03"

    def activityKtx = "1.3.1"
    def fragmentKtx = "1.3.6"
    def lifecycle = "2.4.0-rc01"
    def retrofit = "2.9.0"
    def okhttpVersion = "4.9.0"
    def glideVersion = '4.11.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.leanback:leanback:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'

    implementation "com.google.dagger:hilt-android:$hilt"
    annotationProcessor "com.google.dagger:hilt-compiler:$hilt"
//    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltViewModel"
    kapt("com.google.dagger:hilt-android-compiler:2.46.1")
    implementation "androidx.navigation:navigation-compose:2.5.3"
    implementation "androidx.datastore:datastore:$datastore"
    implementation "com.google.protobuf:protobuf-javalite:$protobuf"
    implementation "androidx.preference:preference-ktx:$preference"


    implementation "androidx.activity:activity-ktx:$activityKtx"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtx"
//    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"

    implementation platform('com.google.firebase:firebase-bom:32.1.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation 'com.jakewharton:process-phoenix:2.1.2'


//    implementation "com.google.dagger:hilt-android:$hilt"
//    kapt "com.google.dagger:hilt-android-compiler:$hilt"
//    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltViewModel"
//    kapt "androidx.hilt:hilt-compiler:$hiltViewModel"
    implementation 'com.google.android.exoplayer:exoplayer:2.18.7'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.18.7'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.18.7'

    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation("org.greenrobot:eventbus:3.3.1")

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.11.0"
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}